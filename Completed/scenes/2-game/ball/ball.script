local data = require "main.data"
local messages = require "main.messages"

go.property("speed", 500)
go.property("speed_increment", 5)

local function resetBall(self, direction)
	-- local randomAngle = (math.pi / 4) * (math.random()-math.random())
	-- local randomDirection = data.round(math.random()) * math.pi
	-- self.direction = vmath.quat_rotation_z(randomDirection + randomAngle)
	go.set_position(self.start_position)
	self.speed = 500	

	local randomVelocityX = (math.random()-math.random()) * 2
	local randomVelocityY = math.random() > 0.5 and -1 or 1

	if direction == 1 then randomVelocityY = 1
	elseif direction == 2 then randomVelocityY = -1
	end
		
	self.direction = vmath.normalize(vmath.vector3(randomVelocityX, randomVelocityY, 0))
end

function init(self)
	self.start_position = go.get_position()
	
	math.randomseed(os.time())
	resetBall(self)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- if data.get_state() ~= data.STATE_PLAY then return end
	
	local pos = go.get_position()
	-- local newPos = vmath.rotate(self.direction, vmath.vector3(0, self.speed, 0))
	pos = pos + self.direction * self.speed * dt
	go.set_position(pos)
end

function on_message(self, message_id, message, sender)
	print(message_id)
	if message_id == messages.CONTACT_POINT then
		if message.normal.y ~= 0 then
			self.direction.y = -self.direction.y
		end
		
		if message.normal.x ~= 0 then
			self.direction.x = -self.direction.x
		end
		
		if message.group == messages.GOAL_1 then
			data.player_scored(2)
		elseif message.group == messages.GOAL_2 then
			data.player_scored(1)
		elseif message.group == messages.PADDLE then
			self.direction = vmath.normalize(self.direction)
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
