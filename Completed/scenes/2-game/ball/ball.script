local data = require "main.data"

go.property("speed", 500)

local function resetBall(self)
	-- local randomAngle = (math.pi / 4) * (math.random()-math.random())
	-- local randomDirection = data.round(math.random()) * math.pi
	-- self.direction = vmath.quat_rotation_z(randomDirection + randomAngle)

	local randomVelocityX = (math.random()-math.random()) * 2
	local randomVelocityY = math.random() > 0.5 and -1 or 1
	self.direction = vmath.normalize(vmath.vector3(randomVelocityX, randomVelocityY, 0))
end

function init(self)
	math.randomseed(os.time())
	resetBall(self)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	local pos = go.get_position()
	-- local newPos = vmath.rotate(self.direction, vmath.vector3(0, self.speed, 0))
	pos = pos + self.direction * self.speed * dt
	go.set_position(pos)
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
